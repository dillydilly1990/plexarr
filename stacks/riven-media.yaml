services:
  riven-frontend:
    image: spoked/riven-frontend:latest
    container_name: riven-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    tty: true
    environment:
      - PUID=100
      - PGID=99
      - ORIGIN=http://${SERVER_IP}:3000  # Set to IP or FQDN of the server
      - BACKEND_URL=http://riven:8080
      - DIALECT=postgres
      - DATABASE_URL=postgres://postgres:postgres@riven-db/riven
      - TZ=America/Detroit
    depends_on:
      riven:
        condition: service_healthy

  riven:
    image: spoked/riven:latest
    container_name: riven
    restart: unless-stopped
    ports:
      - "8080:8080"
    tty: true
    environment:
      - PUID=100
      - PGID=99
      - TZ=America/Detroit
      - RIVEN_FORCE_ENV=true # forces the use of env vars to be always used!
      - RIVEN_SYMLINK_RCLONE_PATH=/mnt/user/data/downloads/torrents/remote/
      - RIVEN_SYMLINK_LIBRARY_PATH=/mnt/user/data/media/ # This is the path that symlinks will be placed in
      - RIVEN_DATABASE_HOST=postgresql+psycopg2://postgres:postgres@riven-db/riven
      - RIVEN_DOWNLOADERS_REAL_DEBRID_ENABLED=true
      - RIVEN_DOWNLOADERS_REAL_DEBRID_API_KEY=3EM3VDDKYJICIM3QZJ4PUQQHLTEIVV3I7FVGZJOXAUHNV3AQPVQQ # set your real debrid api key
      - RIVEN_UPDATERS_PLEX_ENABLED=true
      - RIVEN_UPDATERS_PLEX_URL=http://plex:32400
      - RIVEN_UPDATERS_PLEX_TOKEN=claim-EGoD5LDN5QjtjzZySez7 # set your plex token
      - RIVEN_CONTENT_OVERSEERR_ENABLED=true
      - RIVEN_CONTENT_OVERSEERR_URL=http://overseerr:5055
      - RIVEN_CONTENT_OVERSEERR_API_KEY=MTcyNzQ4ODQ3NTEyNmUxYjhlYzA1LTA1NDctNGE2YS1hMDhkLTY0ZDE0MjkwODBlZA== # set your overseerr token
      - RIVEN_SCRAPING_TORRENTIO_ENABLED=true
      - RIVEN_SCRAPING_ZILEAN_ENABLED=false
      - RIVEN_SCRAPING_ZILEAN_URL=http://zilean:8181
    healthcheck:
      test: curl -s http://localhost:8080 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 10
    volumes:
      - /mnt/user/appdata/debrid/riven:/riven/data
      - /mnt/user/data:/mnt
    depends_on:
      riven_postgres:
        condition: service_healthy

  riven_postgres:
    image: postgres:16.3-alpine3.20
    container_name: riven-db
    restart: unless-stopped
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: riven
    volumes:
      - /mnt/user/appdata/debrid/riven/riven-db:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  ## Plex (optional media server)

  plex:
    image: linuxserver/plex:latest
    container_name: plex
    restart: unless-stopped
    # Add Configurations for GPU Hardware Rendering Here:
    #    devices:
    #      - /dev/dri/renderD128:/dev/dri/renderD128
    #      - /dev/dri/card0:/dev/dri/card0
    volumes:
      - /mnt/user/appdata/debrid/plex:/config
      - /mnt/user/data/media/:/data/media
      #- ts-state-plex:/var/lib/tailscale
    environment:
      - PUID=100
      - PGID=99
      - TZ=America/Detroit
      - VERSION=docker
      - PLEX_CLAIM=
      #- DOCKER_MODS=${DOCKER_MODS:?err}
      #- TAILSCALE_SERVE_PORT=8686
      #- TAILSCALE_SERVE_MODE=https
      #- TAILSCALE_USE_SSH=1
      #- TAILSCALE_HOSTNAME=plex
      #- TAILSCALE_AUTHKEY=${TS_KEY_PLEX:?err}
      #- TS_EXTRA_ARGS=${TS_EX_ARGS}
      #- TAILSCALE_STATE_DIR=/var/lib/tailscale
    # Ports are disabled in containers when they are connected to VPN, as the
    # Gluetun container manages the ports for containers that connect via VPN
    ports:
      - 32400:32400            # Configured in Gluetun VPN container
      - 1900:1900/udp
      - 5353:5353/udp
      - 8324:8324
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469
    labels:
      - net.unraid.docker.managed=dockerman
      - net.unraid.docker.webui=http://192.168.0.69:32400
      - net.unraid.docker.icon=https://raw.githubusercontent.com/plexinc/pms-docker/master/img/plex-server.png


  ## Overseerr (optional content service)

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    environment:
      - PUID=100
      - PGID=99
      - TZ=America/Detroit
    volumes:
      - /mnt/user/appdata/debrid/overseer/:/config
    ports:
      - 5055:5055

  ## Zilean (optional scraper service)

#  zilean:
#    image: ipromknight/zilean:latest
#    container_name: zilean
#    restart: unless-stopped
#    ports:
#      - "8181:8181"
#    volumes:
#      - /mnt/user/appdata/debrid/zilean/data:/app/data
#    environment:
#        Zilean__ElasticSearch__Url: http://elasticsearch:9200
#    healthcheck:
#      test: curl --connect-timeout 10 --silent --show-error --fail http://localhost:8181/healthchecks/ping
#      timeout: 60s
#      interval: 30s
#      retries: 10
#    depends_on:
#      elasticsearch:
#        condition: service_healthy

#  elasticsearch:
#    image: elasticsearch:8.14.1@sha256:ff3998ab3d8a84984e5298d33d01a174fc5f8abed15ad58d0a54364fc63d68d9
#    container_name: elasticsearch
#    environment:
#      ES_SETTING_DISCOVERY_TYPE: single-node
#      ES_SETTING_XPACK_SECURITY_ENABLED: false
#      ES_SETTING_BOOTSTRAP_MEMORY__LOCK: true
#      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    healthcheck:
#      test: curl -s http://localhost:9200 >/dev/null || exit 1
#      interval: 30s
#      timeout: 10s
#      retries: 10
#    volumes:
#      - /mnt/user/appdata/debrid/zilean/elastic_data:/usr/share/elasticsearch/data:rw
