volumes:
  ts-state-qbittorrent: null
  ts-state-rdtclient: null
services:
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    volumes:
      - ${APPDATA}/qbittorrent:/config
      - ${MEDIA}:/data
      - ts-state-qbittorrent:/var/lib/tailscale
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      - WEBUI_PORT=${WEBUI_PORT_QBITTORRENT}
      - DOCKER_MODS=${DOCKER_MODS}|ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest
      - TP_THEME=${TP_THEME}
      - TAILSCALE_SERVE_PORT=8686
      - TAILSCALE_SERVE_MODE=https
      - TAILSCALE_USE_SSH=1
      - TAILSCALE_HOSTNAME=qbittorrent
      - TAILSCALE_AUTHKEY=${TS_KEY}
      - TAILSCALE_STATE_DIR=/var/lib/tailscale
      - TS_EXTRA_ARGS=${TS_EX_ARGS}

## Do Not Change Network for qBittorrent
## qBittorrent MUST always use a VPN / Secure Internet connection
    labels:
      - net.unraid.docker.managed=dockerman
      - net.unraid.docker.webui=http://${SERVER_IP}:8088
      - net.unraid.docker.icon=https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/qbittorrent-logo.png
    network_mode: "container:gluetunVPN"

  rdtclient:
    image: rogerfar/rdtclient:latest
    container_name: rdt-client
    restart: unless-stopped
    volumes:
      - ${APPDATA}/rdt-client/db:/data/db:rw
      - ${DATA}:/data/downloads:rw
      - ts-state-rdtclient:/var/lib/tailscale
    environment:
      - TZ=America/Detroit
      - HOST_OS=Unraid
      - HOST_HOSTNAME=whiskeyshits
      - HOST_CONTAINERNAME=rdt-client
      - PUID=99
      - PGID=100
      - UMASK=022
      - DOCKER_MODS=${DOCKER_MODS}
      - TP_THEME=${TP_THEME}
      - TAILSCALE_SERVE_PORT=8686
      - TAILSCALE_SERVE_MODE=https
      - TAILSCALE_USE_SSH=1
      - TAILSCALE_HOSTNAME=rdt-client
      - TAILSCALE_AUTHKEY=${TS_KEY:?err}
      - TAILSCALE_STATE_DIR=/var/lib/tailscale
      - TS_EXTRA_ARGS=${TS_EX_ARGS}
    # ports:
      # - 6500:6500/tcp
    labels:
      - net.unraid.docker.managed=dockerman
      - net.unraid.docker.webui=http://${SERVER_IP}:6500
      - net.unraid.docker.icon=https://raw.githubusercontent.com/fizzyfrys/unraid-templates/main/icons/premrealldebrid.png
    network_mode: "container:gluetunVPN"
  riven-frontend:
    image: spoked/riven-frontend:latest
    container_name: riven-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    tty: true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - ORIGIN=http://localhost:3000 # set to the url or ip where the frontend is hosted
      - BACKEND_URL=http://riven:8080
      - DIALECT=postgres
      - DATABASE_URL=postgres://postgres:postgres@riven-db/riven
    network_mode: "container:gluetunVPN"
    depends_on:
      riven:
        condition: service_healthy

  riven:
    image: spoked/riven:latest
    container_name: riven
    restart: unless-stopped
#    ports:
#      - "8080:8080"
    tty: true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - RIVEN_FORCE_ENV=true
      - RIVEN_DATABASE_HOST=postgresql+psycopg2://postgres:postgres@riven-db/riven
    healthcheck:
      test: curl -s http://localhost:8080 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 10
    volumes:
      - ${APPDATA}/riven/data:/riven/data
      - ${DATA}:/mnt
    network_mode: "container:gluetunVPN"
    depends_on:
      riven_postgres:
        condition: service_healthy

  riven_postgres:
    image: postgres:17.0-alpine3.20
    container_name: riven-db
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: riven
    volumes:
      - ${APPDATA}/riven-db:/var/lib/postgresql/data/pgdata
    network_mode: "container:gluetunVPN"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

